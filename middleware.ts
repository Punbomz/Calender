import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

// ‚úÖ Edge runtime ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö process ‡∏´‡∏£‡∏∑‡∏≠ firebase-admin
// ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô middleware ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏ä‡πá‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ cookie ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
export function middleware(request: NextRequest) {
  const sessionCookie = request.cookies.get("session")?.value;
  const { pathname } = request.nextUrl;

  console.log("üîç Middleware check:", { path: pathname, hasSession: !!sessionCookie });

  // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ profile ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ session
  if (pathname.startsWith("/profile")) {
    if (!sessionCookie) {
      console.log("‚ùå No session cookie found, redirecting to /login");
      return NextResponse.redirect(new URL("/login", request.url));
    }
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤ login/register
  if (["/login", "/register"].includes(pathname)) {
    if (sessionCookie) {
      console.log("üîÅ Already logged in ‚Üí redirect to /profile");
      return NextResponse.redirect(new URL("/profile", request.url));
    }
  }

  return NextResponse.next();
}

export const config = {
  matcher: ["/profile/:path*", "/login", "/register"],
};
